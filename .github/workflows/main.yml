name: Java CI with Maven
on: 
  push:    
    branches: [ main ]  
  pull_request:    
    branches: [ main ]
    
    
# A workflow run is made up of one or more jobs

jobs:

# “build”

  build:

# The type of runner that the job will run on

    runs-on: ubuntu-latest

 

# Steps represent a sequence of tasks that will be executed as part of the job

    steps:

 

# Checks-out your repository

      - uses: actions/checkout@v2
     

      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
      # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: 1.8   

      - name: build
        run: mvn clean package
        # Runs a set of commands using the runners shell
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@master
        with:
          # Artifact name
          name: build_artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: target/*.jar

  deploy:
    needs: build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
     - uses: actions/checkout@v2
     - name: Add Server
       uses: s4u/maven-settings-action@v2.3.0
       with:
          servers: |
            [{
                “id”: "mule-enterprise",
                “username”: "arischermer",
                “password”: "Piggie96$!"
            }]
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
         
     
     - name: Setup Java JDK
       uses: actions/setup-java@v1
       with:
    # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: 1.8   
     - name: Download a Build Artifact
       uses: actions/download-artifact@master
       with:
        # Artifact name
          name: build_artifact
          
     - name: Deploy to Anypoint Platform
       env:
          USERNAME: ${{ secrets.ANYPOINT_USERNAME }}
          PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
          
       run: |
          artifactName=$(ls *.jar | head -1)
          mvn clean deploy -Denvironment=Sandbox -Dregion=us-east-2 -Dworkers=1 -DworkerType=MICRO -Denv=dev -Dusername=arischermer -Dpassword=Piggie96$! -DmuleDeploy
          
          
